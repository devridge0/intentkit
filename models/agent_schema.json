{
  "$schema": "https://json-schema.org/draft/2020-12/schema#",
  "title": "Agent",
  "description": "Agent model.",
  "type": "object",
  "x-groups": [
    {
      "id": "basic",
      "title": "Basic Information",
      "order": 1
    },
    {
      "id": "ai",
      "title": "AI Configuration",
      "order": 2
    },
    {
      "id": "autonomous",
      "title": "Autonomous Mode",
      "order": 3
    },
    {
      "id": "onchain",
      "title": "On-Chain Integrations",
      "order": 4
    },
    {
      "id": "social",
      "title": "Social Media",
      "order": 5
    },
    {
      "id": "skills",
      "title": "Agent Skills",
      "order": 6
    },
    {
      "id": "experimental",
      "title": "Experimental Features",
      "order": 7
    },
    {
      "id": "deprecated",
      "title": "Deprecated",
      "order": 8
    },
    {
      "id": "internal",
      "title": "Internal",
      "order": 9
    }
  ],
  "properties": {
    "name": {
      "type": "string",
      "description": "Display name of the agent",
      "required": true,
      "x-group": "basic"
    },
    "ticker": {
      "type": "string",
      "description": "Ticker symbol of the agent",
      "required": true,
      "x-group": "basic"
    },
    "purpose": {
      "type": "string",
      "description": "Purpose or role of the agent",
      "required": true,
      "x-group": "basic"
    },
    "personality": {
      "type": "string",
      "description": "Personality traits of the agent",
      "required": true,
      "x-group": "basic"
    },
    "principles": {
      "type": "string",
      "description": "Principles or values of the agent",
      "required": true,
      "x-group": "basic"
    },
    "owner": {
      "type": "string",
      "description": "Owner identifier of the agent, used for access control",
      "readOnly": true,
      "x-group": "internal"
    },
    "upstream_id": {
      "type": "string",
      "description": "External reference ID for idempotent operations",
      "readOnly": true,
      "x-group": "basic"
    },
    "model": {
      "type": "string",
      "description": "AI model identifier to be used by this agent for processing requests. Available models: gpt-4o, gpt-4o-mini, chatgpt-4o-latest, deepseek-chat, deepseek-reasoner, grok-2",
      "default": "gpt-4o-mini",
      "enum": [
        "gpt-4o",
        "gpt-4o-mini",
        "deepseek-chat",
        "deepseek-reasoner",
        "grok-2"
      ],
      "x-group": "ai"
    },
    "prompt": {
      "type": "string",
      "description": "Base system prompt that defines the agent's behavior and capabilities",
      "x-group": "ai"
    },
    "prompt_append": {
      "type": "string",
      "description": "Additional system prompt that overrides or extends the base prompt",
      "x-group": "ai"
    },
    "temperature": {
      "type": "number",
      "description": "AI model temperature parameter controlling response randomness (0.0~1.0)",
      "default": 0.7,
      "minimum": 0.0,
      "maximum": 1.0,
      "x-group": "ai"
    },
    "frequency_penalty": {
      "type": "number",
      "description": "Frequency penalty for the AI model, a higher value penalizes new tokens based on their existing frequency in the chat history (-2.0~2.0)",
      "default": 0.0,
      "minimum": -2.0,
      "maximum": 2.0,
      "x-group": "ai"
    },
    "presence_penalty": {
      "type": "number",
      "description": "Presence penalty for the AI model, a higher value penalizes new tokens based on whether they appear in the chat history (-2.0~2.0)",
      "default": 0.0,
      "minimum": -2.0,
      "maximum": 2.0,
      "x-group": "ai"
    },
    "autonomous": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the autonomous configuration, must contain only lowercase letters, numbers, and dashes",
            "maxLength": 20,
            "pattern": "^[a-z0-9-]+$"
          },
          "name": {
            "type": "string",
            "description": "Display name of the autonomous configuration",
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "Description of the autonomous configuration",
            "maxLength": 200
          },
          "minutes": {
            "type": "integer",
            "description": "Interval in minutes between autonomous operations"
          },
          "cron": {
            "type": "string",
            "description": "Cron expression for scheduling autonomous operations"
          },
          "prompt": {
            "type": "string",
            "description": "Special prompt used during autonomous operation",
            "maxLength": 2000
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether this autonomous configuration is enabled",
            "default": true
          }
        },
        "required": [
          "id"
        ]
      },
      "description": "Autonomous agent configurations",
      "x-group": "autonomous"
    },
    "autonomous_enabled": {
      "type": "boolean",
      "description": "Whether the agent can operate autonomously without user input",
      "default": false,
      "x-group": "autonomous"
    },
    "autonomous_minutes": {
      "type": "integer",
      "description": "Interval in minutes between autonomous operations when enabled",
      "default": 240,
      "x-group": "autonomous"
    },
    "autonomous_prompt": {
      "type": "string",
      "description": "Special prompt used during autonomous operation mode",
      "x-group": "autonomous"
    },
    "cdp_enabled": {
      "type": "boolean",
      "description": "Whether CDP (Crestal Development Platform) integration is enabled",
      "default": false,
      "x-group": "onchain"
    },
    "cdp_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of CDP skills available to this agent",
      "x-group": "skills"
    },
    "cdp_network_id": {
      "type": "string",
      "description": "Network identifier for CDP integration",
      "default": "base-mainnet",
      "enum": [
        "ethereum-mainnet",
        "ethereum-sepolia",
        "polygon-mainnet",
        "polygon-mumbai",
        "base-mainnet",
        "base-sepolia",
        "arbitrum-mainnet",
        "arbitrum-sepolia",
        "optimism-mainnet",
        "optimism-sepolia"
      ],
      "x-group": "onchain"
    },
    "crossmint_config": {
      "type": "object",
      "description": "Dict of Crossmint wallet configurations",
      "x-group": "onchain"
    },
    "goat_enabled": {
      "type": "boolean",
      "description": "Whether GOAT integration is enabled",
      "default": false,
      "x-group": "onchain"
    },
    "goat_skills": {
      "type": "object",
      "description": "Dict of GOAT skills and their corresponding configurations",
      "x-group": "onchain"
    },
    "twitter_entrypoint_enabled": {
      "type": "boolean",
      "description": "Whether the agent can receive events from Twitter",
      "default": false,
      "x-group": "social"
    },
    "twitter_config": {
      "type": "object",
      "description": "Twitter integration configuration settings",
      "x-group": "social"
    },
    "twitter_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of Twitter-specific skills available to this agent",
      "x-group": "social"
    },
    "telegram_entrypoint_enabled": {
      "type": "boolean",
      "description": "Whether the agent can receive events from Telegram",
      "default": false,
      "x-group": "social"
    },
    "telegram_config": {
      "type": "object",
      "description": "Telegram integration configuration settings",
      "x-group": "social"
    },
    "telegram_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of Telegram-specific skills available to this agent",
      "x-group": "social"
    },
    "crestal_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of Crestal platform-specific skills available to this agent",
      "x-group": "skills"
    },
    "common_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of general-purpose skills available to this agent",
      "x-group": "skills"
    },
    "skills": {
      "type": "object",
      "description": "Dict of skills and their corresponding configurations",
      "x-group": "skills",
      "properties": {
        "cdp": {
          "$ref": "../skills/cdp/schema.json"
        },
        "twitter": {
          "$ref": "../skills/twitter/schema.json"
        },
        "acolyt": {
          "$ref": "../skills/acolyt/schema.json"
        },
        "allora": {
          "$ref": "../skills/allora/schema.json"
        },
        "enso": {
          "$ref": "../skills/enso/schema.json"
        },
        "cryptocompare": {
          "$ref": "../skills/cryptocompare/schema.json"
        },
        "elfa": {
          "$ref": "../skills/elfa/schema.json"
        },
        "slack": {
          "$ref": "../skills/slack/schema.json"
        },
        "common": {
          "$ref": "../skills/common/schema.json"
        }
      }
    },
    "enso_enabled": {
      "type": "boolean",
      "description": "Whether Enso integration is enabled",
      "default": false,
      "x-group": "onchain"
    },
    "enso_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of Enso-specific skills available to this agent",
      "x-group": "skills"
    },
    "enso_config": {
      "type": "object",
      "description": "Enso integration configuration settings",
      "x-group": "onchain"
    },
    "acolyt_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of Acolyt-specific skills available to this agent",
      "x-group": "skills"
    },
    "acolyt_config": {
      "type": "object",
      "description": "Acolyt integration configuration settings",
      "x-group": "onchain"
    },
    "allora_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of Allora-specific skills available to this agent",
      "x-group": "skills"
    },
    "allora_config": {
      "type": "object",
      "description": "Allora integration configuration settings",
      "x-group": "onchain"
    },
    "elfa_skills": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of Elfa-specific skills available to this agent",
      "x-group": "skills"
    },
    "elfa_config": {
      "type": "object",
      "description": "Elfa integration configuration settings",
      "x-group": "onchain"
    }
  },
  "additionalProperties": false
}